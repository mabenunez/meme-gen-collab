[1mdiff --git a/src/components/Main/Main.js b/src/components/Main/Main.js[m
[1mindex f07b863..50e6b43 100644[m
[1m--- a/src/components/Main/Main.js[m
[1m+++ b/src/components/Main/Main.js[m
[36m@@ -7,71 +7,68 @@[m [mimport { getImg } from '../../utils/api.js';[m
 [m
 class Main extends Component {[m
  constructor() {[m
[31m-  super()[m
[31m-  this.state = {[m
[31m-   topText: '',[m
[31m-   botText: '',[m
[31m-   allMemeImgs: [],[m
[31m-   randomImg: ''[m
[31m-  };[m
[31m-[m
[32m+[m[32m    super()[m
[32m+[m[32m    this.state = {[m
[32m+[m[32m     topText: '',[m
[32m+[m[32m     botText: '',[m
[32m+[m[32m     allMemeImgs: [],[m
[32m+[m[32m     randomImg: ''[m
[32m+[m[32m    };[m
   this.handleClick = this.handleClick.bind(this);[m
   this.handleChange = this.handleChange.bind(this);[m
  }[m
  componentDidMount() {[m
[31m-  getImg().then( data => {[m
[31m-   this.setState({[m
[31m-     allMemeImgs: data.data.memes[m
[31m-   });[m
[31m-    console.log(this.state.allMemeImgs)[m
[31m-  })[m
[32m+[m[32m    getImg().then( data => {[m
[32m+[m[32m     this.setState({[m
[32m+[m[32m       allMemeImgs: data.data.memes[m
[32m+[m[32m     });[m
[32m+[m[32m    })[m
  }[m
  handleChange(e) {[m
[31m-  const { name, value } = e.target;[m
[31m-  this.setState({[m
[31m-   [name]: value[m
[31m-  })[m
[32m+[m[32m    const { name, value } = e.target;[m
[32m+[m[32m    this.setState({[m
[32m+[m[32m     [name]: value[m
[32m+[m[32m    })[m
  }[m
  handleClick(e) {[m
[31m-  e.preventDefault();[m
[31m-  const { allMemeImgs } = this.state;[m
[31m-  const randNum = Math.floor(Math.random() * allMemeImgs.length );[m
[31m-  const randMemeImg = allMemeImgs[randNum].url;[m
[31m-  console.log(randMemeImg)[m
[31m-  this.setState({[m
[31m-    randomImg: randMemeImg[m
[31m-  })[m
[32m+[m[32m    e.preventDefault();[m
[32m+[m[32m    const { allMemeImgs } = this.state;[m
[32m+[m[32m    const randNum = Math.floor(Math.random() * allMemeImgs.length );[m
[32m+[m[32m    const randMemeImg = allMemeImgs[randNum].url;[m
[32m+[m[32m    this.setState({[m
[32m+[m[32m      randomImg: randMemeImg[m
[32m+[m[32m    })[m
  }[m
  render() {[m
[31m-  const { topText, botText, randomImg } = this.state;[m
[31m-  return ([m
[31m-    <div>[m
[31m-      <form className="meme-form">[m
[31m-       <label htmlFor="input">Top text:</label>[m
[31m-        <input[m
[31m-         type="text"[m
[31m-         name="topText"[m
[31m-         placeholder="Set Top Text"[m
[31m-         value={topText}[m
[31m-         onChange={this.handleChange}[m
[31m-        />[m
[31m-        <label htmlFor="input">Bottom text:</label>[m
[31m-        <input[m
[31m-         type="text"[m
[31m-         name="botText"[m
[31m-         placeholder="Set Bottom Text"[m
[31m-         value={botText}[m
[31m-         onChange={this.handleChange}[m
[31m-        />[m
[31m-        <button onClick={this.handleClick}>Generate</button>[m
[31m-      </form>[m
[31m-      <div className="meme">[m
[31m-       <img src={randomImg} alt=""/>[m
[31m-       <h2 className="top">{topText}</h2>[m
[31m-       <h2 className="bot">{botText}</h2>[m
[32m+[m[32m    const { topText, botText, randomImg } = this.state;[m
[32m+[m[32m    return ([m
[32m+[m[32m      <div>[m
[32m+[m[32m        <form className="meme-form">[m
[32m+[m[32m         <label htmlFor="input">Top text:</label>[m
[32m+[m[32m          <input[m
[32m+[m[32m           type="text"[m
[32m+[m[32m           name="topText"[m
[32m+[m[32m           placeholder="Set Top Text"[m
[32m+[m[32m           value={(topText.upperCase)}[m
[32m+[m[32m           onChange={this.handleChange}[m
[32m+[m[32m          />[m
[32m+[m[32m          <label htmlFor="input">Bottom text:</label>[m
[32m+[m[32m          <input[m
[32m+[m[32m           type="text"[m
[32m+[m[32m           name="botText"[m
[32m+[m[32m           placeholder="Set Bottom Text"[m
[32m+[m[32m           value={botText}[m
[32m+[m[32m           onChange={this.handleChange}[m
[32m+[m[32m          />[m
[32m+[m[32m          <button onClick={this.handleClick}>Get Meme</button>[m
[32m+[m[32m        </form>[m
[32m+[m[32m        <div className="meme">[m
[32m+[m[32m         <img src={randomImg} alt=""/>[m
[32m+[m[32m         <h2 className="top">{topText}</h2>[m
[32m+[m[32m         <h2 className="bot">{botText}</h2>[m
[32m+[m[32m        </div>[m
       </div>[m
[31m-    </div>[m
[31m-   )[m
[31m-  }[m
[32m+[m[32m    )[m
[32m+[m[32m }[m
  }[m
 export default Main;[m
\ No newline at end of file[m
[1mdiff --git a/src/components/Main/mainstyle.css b/src/components/Main/mainstyle.css[m
[1mindex 6a91c2b..d86fb91 100644[m
[1m--- a/src/components/Main/mainstyle.css[m
[1m+++ b/src/components/Main/mainstyle.css[m
[36m@@ -49,7 +49,10 @@[m
  left: 50%;[m
  transform: translateX(-50%);[m
  margin: 15px 0;[m
[31m- color: blue;[m
[32m+[m[32m font-family: Arial, 'Bold';[m
[32m+[m[32m font-size: 3em;[m
[32m+[m[32m text-transform: uppercase;[m
[32m+[m[32m color: white;[m
  letter-spacing: 1px;[m
 }[m
 [m
[1mdiff --git a/src/utils/api.js b/src/utils/api.js[m
[1mindex 1d93256..597f7ba 100644[m
[1m--- a/src/utils/api.js[m
[1m+++ b/src/utils/api.js[m
[36m@@ -4,6 +4,5 @@[m [mimport axios from 'axios'[m
 export async function getImg() {[m
  const data = await axios.get('https://api.imgflip.com/get_memes')[m
   .catch( error => console.log(error));[m
[31m-  console.log('Api Call', data.data)[m
  return data.data;[m
 }[m
\ No newline at end of file[m
